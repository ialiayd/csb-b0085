{"version":3,"sources":["constants/charactersTypes.js","actions/charactersActions.js","components/CharacterList.jsx","constants/characterDetailTypes.js","actions/characterDetailActions.js","components/CharacterDetail.jsx","App.js","reducers/charactersReducer.js","reducers/characterDetailReducer.js","reducers/index.js","store/index.js","index.js"],"names":["CHARACTERS","FETCH_CHARACTERS_PENDING","FETCH_CHARACTERS_SUCCESS","FETCH_CHARACTERS_FAILURE","fetchSuccess","data","type","payload","fetchFailure","error","fetchCharacters","dispatch","a","fetch","then","response","json","results","catch","CharacterList","characters","useSelector","state","useDispatch","useEffect","charactersData","length","console","log","isFetching","isError","map","item","to","id","name","CHARACTER_DETAIL","FETCH_CHARACTER_DETAIL_PENDING","FETCH_CHARACTER_DETAIL_SUCCESS","FETCH_CHARACTER_DETAIL_FAILURE","fetchCharacterDetailById","characterId","CharacterDetail","characterDetail","useParams","characterData","src","image","alt","App","className","exact","path","initialState","charactersReducer","action","combineReducers","characterDetailReducer","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6d489788.chunk.js","sourcesContent":["const CHARACTERS = {\r\n  FETCH_CHARACTERS_PENDING: \"FETCH_CHARACTERS_PENDING\",\r\n  FETCH_CHARACTERS_SUCCESS: \"FETCH_CHARACTERS_SUCCESS\",\r\n  FETCH_CHARACTERS_FAILURE: \"FETCH_CHARACTERS_FAILURE\"\r\n};\r\n\r\nexport default CHARACTERS;\r\n","import CHARACTERS from \"../constants/charactersTypes\";\r\n\r\nconst fetchSuccess = (data) => ({\r\n  type: CHARACTERS.FETCH_CHARACTERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nconst fetchFailure = (error) => ({\r\n  type: CHARACTERS.FETCH_CHARACTERS_FAILURE,\r\n  payload: error\r\n});\r\n\r\nconst fetchPending = () => ({\r\n  type: CHARACTERS.FETCH_CHARACTERS_PENDING\r\n});\r\n\r\nconst fetchCharacters = () => async (dispatch) => {\r\n  dispatch(fetchPending());\r\n  return fetch(\"https://rickandmortyapi.com/api/character/\")\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch(fetchSuccess(data.results)))\r\n    .catch((error) => dispatch(fetchFailure(error)));\r\n};\r\n\r\nexport default fetchCharacters;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport fetchCharacters from \"../actions/charactersActions\";\r\n\r\nconst CharacterList = () => {\r\n  const characters = useSelector((state) => state.characters);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (characters.charactersData.length === 0) {\r\n      dispatch(fetchCharacters());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   const timing = setInterval(() => {\r\n  //     // dispatch(fetchCharacters());\r\n  //     console.log(`object`, new Date().getSeconds());\r\n  //   }, 2000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(timing);\r\n  //   };\r\n  // }, [dispatch]);\r\n\r\n  console.log(`characters`, characters);\r\n\r\n  if (characters.isFetching) return <div>Loading</div>;\r\n  if (characters.isError) return <div>Error</div>;\r\n\r\n  console.log(`characters`, characters);\r\n\r\n  return (\r\n    <div>\r\n      <h1>CharacterList</h1>\r\n\r\n      <div>\r\n        {characters.charactersData.length > 0 &&\r\n          characters.charactersData.map((item) => (\r\n            <div key={item.id}>\r\n              <Link to={`/character/${item.id}`}>{item.name}</Link>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","const CHARACTER_DETAIL = {\r\n  FETCH_CHARACTER_DETAIL_PENDING: \"FETCH_CHARACTER_DETAIL_PENDING\",\r\n  FETCH_CHARACTER_DETAIL_SUCCESS: \"FETCH_CHARACTER_DETAIL_SUCCESS\",\r\n  FETCH_CHARACTER_DETAIL_FAILURE: \"FETCH_CHARACTER_DETAIL_FAILURE\"\r\n};\r\n\r\nexport default CHARACTER_DETAIL;\r\n","import CHARACTER_DETAIL from \"../constants/characterDetailTypes\";\r\n\r\nconst fetchSuccess = (data) => ({\r\n  type: CHARACTER_DETAIL.FETCH_CHARACTER_DETAIL_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nconst fetchFailure = (error) => ({\r\n  type: CHARACTER_DETAIL.FETCH_CHARACTER_DETAIL_FAILURE,\r\n  payload: error\r\n});\r\n\r\nconst fetchPending = () => ({\r\n  type: CHARACTER_DETAIL.FETCH_CHARACTER_DETAIL_PENDING\r\n});\r\n\r\nconst fetchCharacterDetailById = (characterId) => async (dispatch) => {\r\n  dispatch(fetchPending());\r\n  return fetch(`https://rickandmortyapi.com/api/character/${characterId}`)\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch(fetchSuccess(data)))\r\n    .catch((error) => dispatch(fetchFailure(error)));\r\n};\r\n\r\nexport default fetchCharacterDetailById;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport fetchCharacterDetailById from \"../actions/characterDetailActions\";\r\n\r\nconst CharacterDetail = () => {\r\n  const characterDetail = useSelector((state) => state.characterDetail);\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCharacterDetailById(id));\r\n  }, [dispatch, id]);\r\n\r\n  console.log(`characterDetail`, characterDetail);\r\n\r\n  if (characterDetail.isFetching) return <div>Loading</div>;\r\n  if (characterDetail.characterData.error)\r\n    return <div>{characterDetail.characterData.error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>CharacterDetail</h1>\r\n\r\n      <div>\r\n        {characterDetail.characterData.name && (\r\n          <>\r\n            <div> {characterDetail.characterData.name} </div>\r\n            <img\r\n              src={characterDetail.characterData.image}\r\n              alt={characterDetail.characterData.name}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import CharacterList from \"./components/CharacterList\";\nimport \"./styles.css\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport CharacterDetail from \"./components/CharacterDetail\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Character List</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <CharacterList />\n          </Route>\n\n          <Route path=\"/character/:id\">\n            <CharacterDetail />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","import CHARACTERS from \"../constants/charactersTypes\";\r\n\r\nconst initialState = {\r\n  charactersData: [],\r\n  isFetching: false,\r\n  isError: false\r\n};\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHARACTERS.FETCH_CHARACTERS_PENDING:\r\n      return { ...state, isFetching: true, charactersData: {}, isError: false };\r\n    case CHARACTERS.FETCH_CHARACTERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        charactersData: action.payload,\r\n        isFetching: false,\r\n        isError: false\r\n      };\r\n    case CHARACTERS.FETCH_CHARACTERS_FAILURE:\r\n      return { ...state, isError: true, isFetching: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default charactersReducer;\r\n","import CHARACTER_DETAIL from \"../constants/characterDetailTypes\";\r\n\r\nconst initialState = {\r\n  characterData: {},\r\n  isFetching: false,\r\n  isError: false\r\n};\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHARACTER_DETAIL.FETCH_CHARACTER_DETAIL_PENDING:\r\n      return { ...state, isFetching: true, characterData: {}, isError: false };\r\n    case CHARACTER_DETAIL.FETCH_CHARACTER_DETAIL_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        characterData: action.payload,\r\n        isFetching: false,\r\n        isError: false\r\n      };\r\n    }\r\n    case CHARACTER_DETAIL.FETCH_CHARACTER_DETAIL_FAILURE:\r\n      return { ...state, isError: true, isFetching: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default charactersReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport charactersReducer from \"./charactersReducer\";\r\nimport characterDetailReducer from \"./characterDetailReducer\";\r\n\r\nexport default combineReducers({\r\n  characters: charactersReducer,\r\n  characterDetail: characterDetailReducer\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}